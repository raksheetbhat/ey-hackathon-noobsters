version: '3.8'

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow

  webserver:
    build: ./airflow
    entrypoint: ./airflow/scripts/entrypoint_webserver.sh
    deploy:
      replicas: 1
    restart: on-failure:1
    depends_on:
      - postgres

    env_file:
      - ./airflow/.env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/data:/opt/airflow/data
      - ./airflow/requirements.txt:/opt/airflow/requirements.txt
    ports:
      - "8080:8080"

  scheduler:
    build: ./airflow
    entrypoint: ./airflow/scripts/entrypoint_scheduler.sh
    restart: on-failure:1
    deploy:
      replicas: 1
    depends_on:
      - postgres
      - webserver

    env_file:
      - ./airflow/.env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/data:/opt/airflow/data
      - ./airflow/requirements.txt:/opt/airflow/requirements.txt

  backend-service:
    build: ./backend-service
    expose:
      - "5000"
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app.py
      - FLASK_DEBUG=1

  frontend-service:
    build: ./frontend-service
    expose:
      - "3000"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-service/src:/usr/src/app/src
      - ./frontend-service/public:/usr/src/app/public
    links:
      - "backend-service:backend-service"